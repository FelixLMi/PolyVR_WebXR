<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="WebXR_Utility" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="4294967295">
      <Object ambient="0.3 0.3 0.3 1" base_name="light" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" shadowVolume="1e+06 1e+06 1e+06 -1e+06 -1e+06 -1e+06 1" specular="0.1 0.1 0.1 1" type="Light" visible="4294967295">
        <Object accept_root="1" aspect="1" at="0 0 0" at_dir="0" base_name="Default" far="512" fov="1.0472" from="3 2 3" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="4294967295">
          <attachments>
            <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
          </attachments>
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="light" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="4294967295">
            <attachments>
              <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
            </attachments>
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Cameras activeCam="Default" persistency="666"/>
  <Rendering deferred_rendering="0" fogColor="0.5 0.5 0.5 1" fogParams="0 0 100 0.1" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="cam_handler" group="webxr_utility" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	from VR.Math import Vec3
	#from VR.Math import Vec4
	#print pos_x, pos_y, pos_z

	px = VR.camZeroPos[0] + float(pos_x)
	py = VR.camZeroPos[1] + float(pos_y)
	pz = VR.camZeroPos[2] + float(pos_z)
	VR.getActiveCamera().setFrom( Vec3([px,py,pz]) )
	quat_x = float(quat_x)
	quat_y = float(quat_y)
	quat_z = float(quat_z)
	quat_w = float(quat_w)
	VR.getActiveCamera().setOrientationQuat( [quat_x, quat_y, quat_z, quat_w] )
</core>
      <arg type="NoneType" value="None" base_name="pos_x" name_space="cam_handler" name_suffix="0" persistency="666"/>
      <arg type="NoneType" value="None" base_name="pos_y" name_space="cam_handler" name_suffix="0" persistency="666"/>
      <arg type="NoneType" value="None" base_name="pos_z" name_space="cam_handler" name_suffix="0" persistency="666"/>
      <arg type="NoneType" value="None" base_name="quat_x" name_space="cam_handler" name_suffix="0" persistency="666"/>
      <arg type="NoneType" value="None" base_name="quat_y" name_space="cam_handler" name_suffix="0" persistency="666"/>
      <arg type="NoneType" value="None" base_name="quat_z" name_space="cam_handler" name_suffix="0" persistency="666"/>
      <arg type="NoneType" value="None" base_name="quat_w" name_space="cam_handler" name_suffix="0" persistency="666"/>
    </Script>
    <Script base_name="cam_reset" group="webxr_utility" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR

	VR.getActiveCamera().setFrom(VR.camZeroPos)
</core>
    </Script>
    <Script base_name="cam_saveZero" group="webxr_utility" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR

	VR.camZeroPos = VR.getActiveCamera().getFrom()
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="1" persistency="666"/>
    </Script>
    <Script base_name="init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR

	if hasattr(VR, 'scene'): VR.scene.destroy()
	VR.scene = VR.Object('scene', 'light')

	
</core>
    </Script>
    <Script base_name="toggle_Stereo" group="webxr_utility" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	setup = VR.getSetup()
	view = setup.getView(0)
	view.toggleStereo()
</core>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
