<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="AR_test" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="4294967295">
      <Object ambient="0.3 0.3 0.3 1" base_name="light" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" shadowVolume="1e+06 1e+06 1e+06 -1e+06 -1e+06 -1e+06 1" specular="0.1 0.1 0.1 1" type="Light" visible="4294967295">
        <Object accept_root="1" aspect="1" at="0.032024 0.0388591 0.138312" at_dir="0" base_name="Default" far="512" fov="1.0472" from="0.144705 0.143476 0.631552" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="4294967295">
          <attachments>
            <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
          </attachments>
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="light" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="4294967295">
            <attachments>
              <Node base_name="transform" name_space="VRAttachment" name_suffix="0" persistency="666" value=""/>
            </attachments>
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Cameras activeCam="Default" persistency="666"/>
  <Rendering deferred_rendering="0" fogColor="0.5 0.5 0.5 1" fogParams="0 0 100 0.1" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="addAnno" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR

	if VR.find('testAnno'):
		VR.find('testAnno').destroy()

	anno = VR.AnnotationEngine('testAnno')
	anno.set(0,[0,0.5,0.4],'FLM')
	anno.setOrientation([0,0,1],[0,1,0])
	anno.setColor([0,0,0.8,1])
	VR.scene.addChild(anno)
</core>
    </Script>
    <Script base_name="addCube" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	import math

	if VR.find('testCube'):
		VR.find('testCube').destroy()

	geo = VR.Geometry('testCube')
	geo.setPrimitive('Box 0.2 0.2 0.2')
	geo.rotate(180/math.pi,[1,0,0])
	geo.rotate(35.2,[0,0,1])
	geo.getMaterial().setDiffuse([0,0.5,0])
	#geo.getMaterial().setTexture('logo_icon.png')
	#geo.getMaterial().clearTransparency()
	#geo.getMaterial().setTransparency(0.3)
	VR.scene.addChild(geo)
</core>
    </Script>
    <Script base_name="init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR

	if hasattr(VR, 'scene'): VR.scene.destroy()
	VR.scene = VR.Object('scene', 'light')

	VR.importScene('WebXR_Utility.pvr')
	VR.cam_saveZero()
	
	VR.addCube()
	#VR.addAnno()
	
	
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="1" persistency="666"/>
    </Script>
    <Script base_name="spinCube" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	if VR.find('testCube'):
		VR.find('testCube').rotateWorld(0.03,[0,1,0])
</core>
      <trig type="on_timeout" dev="" state="Pressed" param="0" key="0" base_name="trigger" name_space="__global__" name_suffix="2" persistency="666"/>
    </Script>
    <Script base_name="test" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR

	print VR.getActiveCamera().getFrom()
	#VR.cam_reset()
	VR.getActiveCamera.setFrom([0.289054,0.692312,2.13116])
</core>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0 0 0" format=".png" path="/home/administrator/Projects/webXR/transparent_pixel.png" persistency="666" type="1"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
